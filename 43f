#!/bin/bash

# 
# 43f - 
# 
# v0.1   - 2009-03-07 - Morgan Aldridge <morgant@makkintosshu.com>
#                       Initial development.
# 

version='0.1'
verbose=false
config_file='/usr/local/etc/43f.conf'
config_repository='/usr/local/var/db/43f'
config_test=false
notify_email='root'

y=`date "+%Y"`
m=`date "+%m"`
d=`date "+%d"`

function usage() {
	printf "Usage: 43f [-h|-t|-V] [-v] [-f file] \n"
	printf "\nOptions:\n"
	printf "  -v            : verbose output\n"
	printf "  -V, --version : print the version number and exit\n"
	printf "  -h, --help    : print these usage instructions and exit\n"
	printf "  -f            : specify an alternate config file\n"
	printf "         DEFAULT: /usr/local/etc/43f.conf\n"
	printf "  -t            : check the config file and exit\n"
	printf "\nConfig File Options:\n"
	printf "  repository    : absolute path to archive repository\n"
	printf "  notify        : email address to send notifications to\n"
}

function load_config() {
	local success
	local var
	local val
	success=true
	IFS==
	while read var val; do
		case "$var" in
			\#*)
				# do nothing - this would be a comment
				;;
			repository)
				if [ -n "$val" -a -d "$val" ]; then
					config_repository="$val"
					if $verbose ; then
						printf "'%s' set to '%s'.\n" "$var" "$config_repository"
					fi
				else
					printf "Error: '%s' value in config file is either invalid or not a directory!\n" "$var"
					success=false
				fi
				;;
			notify)
				if echo "$val" | grep -q -i -E '^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$' ; then
					notify_email="$val"
					if $verbose ; then
						printf "'%s' set to '%s'.\n" "$var" "$notify_email"
					fi
				else
					printf "Error: '%s' value in config file is not a valid email address!\n" "$var"
					success=false
				fi
				;;
			*)
				printf "Warning: Ignored unknown configuration variable '%s'.\n" "$var"
				;;
		esac
	done < "$1"
	if $success; then return 0; else return 1; fi
}

function create_repository() {
	local success
	success=true
	
	# does the repository exist?
	if $verbose ; then
		printf "Repository directory '%s' " "$config_repository"
	fi
	if [ -d "$config_repository" ] ; then
		if $verbose ; then
			printf "exists.\n"
		fi
	else
		if $verbose ; then
			printf "does not exist. Creating... "
		fi
		if mkdir -p $config_repository ; then
			if $verbose ; then
				printf "Done.\n"
			fi
		else
			if $verbose ; then
				printf "Error!\n"
			fi
			success=false
		fi
	fi
	
	# create the necessary sub directories
	if [ $success -eq 0 ] ; then
		local current_dir
		# check for current year directory
		current_dir="$config_repository/$y"
		if $verbose ; then
			printf "Year Directory '%s' " "$current_dir"
		fi
		if [ -d "$current_dir" ] ; then
			if $verbose ; then
				printf "exists.\n"
			fi
		else
			if $verbose; then
				printf "does not exist. Creating... "
			fi
			if mkdir $current_dir ; then
				if $verbose ; then
					printf "Done.\n"
				fi
			else
				if $verbose ; then
					printf "ERROR!\n"
				fi
				success=false
			fi
		fi
	fi
	
	if $success; then return 0; else return 1; fi
}

if [ $# -gt 0 ]; then
	until [ $# -eq 0 ]; do
		case "$1" in
			-h|--help)
				usage
				exit
				;;
			-v)
				verbose=true
				if $verbose ; then
					printf "Enabling verbose mode.\n"
				fi
				;;
			-V|--version)
				printf "43f v%s\n" $version
				exit
				;;
			-f)
				if [ -n $2 -a -e $2 ]; then
					config_file="$2"
					if $verbose ; then
						printf "Using config file '%s'.\n" $config_file
					fi
				else
					printf "Error: config file '%s' does not exist!\nExiting.\n" "$2"
					exit 1
				fi
				shift
				;;
			-t)
				config_test=true
				;;
			*)
				
				;;
		esac
		shift
	done
	
	# load the config file
	if load_config "$config_file"; then
		if $verbose ; then
			printf "Config file loaded successfully.\n"
		fi
		if $config_test ; then
			if $verbose ; then
				printf "Exiting.\n"
			fi
			exit
		fi
	else
		printf "Error: an error occurred while loading the config file '%s'!\nExiting.\n" $config_file
		exit 1
	fi
	
	# check/create repository directories
	if create_repository ; then
		if $verbose ; then
			printf "Repository directories found/created successfully.\n"
		fi
	else
		if $verbose ; then
			printf "Error: an error occurred while checking or creating the repository directories in '%s'!\nExiting.\n" "$config_repository"
			exit 1
		fi
	fi
	
	
	
else
	usage
	exit 1
fi
